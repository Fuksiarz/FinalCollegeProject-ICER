create database sklep;

use sklep;

SET SQL_SAFE_UPDATES = 0;

CREATE TABLE Users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);
INSERT INTO Users (username, password)
VALUES ('root', '$2b$12$8JnOBy0M5Edogzihz79MsOUzPQVLlWtYBnf3X9KQSaQx825MqFbsu');

-- tworzenie tabeli Produkty
CREATE TABLE Produkty (
  id INT PRIMARY KEY AUTO_INCREMENT,
  nazwa VARCHAR(100),
  cena DECIMAL(8,2),
  kalorie INT,
  tluszcze DECIMAL(4,2),
  weglowodany DECIMAL(4,2),
  bialko DECIMAL(4,2),
  kategoria VARCHAR(50)

);






DELIMITER //
CREATE PROCEDURE ModifyProductQuantity(IN p_icerID INT, IN p_userID INT, IN p_action ENUM('add', 'subtract'))
BEGIN
    DECLARE current_quantity INT;

    -- Pobieranie aktualnej ilości produktu dla danego wpisu (bazując na ID z tabeli Icer)
    SELECT ilosc INTO current_quantity FROM Icer WHERE id = p_icerID AND UserID = p_userID;

    -- Zaktualizowanie ilości w zależności od wybranej akcji
    IF p_action = 'add' THEN
        SET current_quantity = current_quantity + 1;
    ELSEIF p_action = 'subtract' AND current_quantity > 0 THEN
        SET current_quantity = current_quantity - 1;
    END IF;

    -- Aktualizacja ilości produktu dla danego wpisu w tabeli Icer
    UPDATE Icer SET ilosc = current_quantity WHERE id = p_icerID AND UserID = p_userID;
END //
DELIMITER ;



CREATE TABLE Icer (
    id INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    produktID INT,
    ilosc INT,
    trzecia_wartosc TINYINT CHECK (trzecia_wartosc >= 1 AND trzecia_wartosc <= 4),
    data_waznosci DATE,
    FOREIGN KEY (UserID) REFERENCES Users (id),
    FOREIGN KEY (produktID) REFERENCES Produkty (id)
)



DELIMITER //
CREATE PROCEDURE UpdateTrzeciaWartosc()
BEGIN
    -- Flagowanie produktów, które już wygasły
    UPDATE Icer
    SET trzecia_wartosc = 1
    WHERE DATE(data_waznosci) < DATE(NOW());

    -- Flagowanie produktów z 1 dniem do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 1
    WHERE DATE(data_waznosci) = DATE(NOW());

    -- Flagowanie produktów z 3 dniami do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 2
    WHERE DATE(data_waznosci) BETWEEN DATE(NOW()) AND DATE(NOW() + INTERVAL 3 DAY);

    -- Flagowanie produktów z pomiędzy 3 a 7 dni do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 3
    WHERE DATE(data_waznosci) > DATE(NOW() + INTERVAL 3 DAY) AND DATE(data_waznosci) <= DATE(NOW() + INTERVAL 7 DAY);

    -- Flagowanie produktów z ponad 7 dni do końca ważności ale mniej niż miesiąc
    UPDATE Icer
    SET trzecia_wartosc = 4
    WHERE DATE(data_waznosci) > DATE(NOW() + INTERVAL 7 DAY) ;
END //
DELIMITER ;