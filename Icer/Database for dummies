create database sklep;

use sklep;

CREATE TABLE Users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);
INSERT INTO Users (username, password)
VALUES ('root', '$2b$12$8JnOBy0M5Edogzihz79MsOUzPQVLlWtYBnf3X9KQSaQx825MqFbsu');

-- tworzenie tabeli Produkty
CREATE TABLE Produkty (
  id INT PRIMARY KEY AUTO_INCREMENT,
  nazwa VARCHAR(100),
  cena DECIMAL(8,2),
  kalorie INT,
  tluszcze DECIMAL(4,2),
  weglowodany DECIMAL(4,2),
  bialko DECIMAL(4,2),
  kategoria VARCHAR(50)

);





CREATE TABLE Icer (
    id INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    produktID INT,
    ilosc INT,
    trzecia_wartosc TINYINT CHECK (trzecia_wartosc >= 0 AND trzecia_wartosc <= 3),  -- Zmieniono ograniczenie na >= 0
    data_waznosci DATE,  -
    FOREIGN KEY (UserID) REFERENCES Users (id),
    FOREIGN KEY (produktID) REFERENCES Produkty (id)
)


DELIMITER //
CREATE PROCEDURE UpdateTrzeciaWartosc()
BEGIN
    -- Flagowanie produktów, które już wygasły
    UPDATE Icer
    SET trzecia_wartosc = 0
    WHERE DATE(data_waznosci) < DATE(NOW());

    -- Flagowanie produktów z 1 dniem do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 1
    WHERE DATE(data_waznosci) = DATE(NOW() + INTERVAL 1 DAY);

    -- Flagowanie produktów z tygodniem do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 2
    WHERE DATE(data_waznosci) BETWEEN DATE(NOW() + INTERVAL 1 DAY) AND DATE(NOW() + INTERVAL 7 DAY);

    -- Flagowanie produktów z ponad miesiącem do końca ważności
    UPDATE Icer
    SET trzecia_wartosc = 3
    WHERE DATE(data_waznosci) > DATE(NOW() + INTERVAL 7 DAY);
END //
DELIMITER ;
